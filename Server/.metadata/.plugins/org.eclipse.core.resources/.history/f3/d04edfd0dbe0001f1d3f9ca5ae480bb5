package Main;

import java.awt.*;
import javax.swing.*;
import javax.swing.table.*;
import java.util.Vector;
import java.io.File;
import java.awt.image.*;
import javax.imageio.ImageIO;

public class ImageInTableApp extends JFrame {

    private JTable table;

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    ImageInTableApp frame = new ImageInTableApp();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    public ImageInTableApp() {
        setTitle("Display Image in JTable");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 600, 400);
        
        // Sample data for the table
        Vector<String> columnNames = new Vector<>();
        columnNames.add("ID");
        columnNames.add("Name");
        columnNames.add("Image");

        Vector<Vector<Object>> rowData = new Vector<>();
        rowData.add(createRow(1, "John Doe", "image1.jpg"));
        rowData.add(createRow(2, "Jane Smith", "image2.jpg"));
        rowData.add(createRow(3, "Jane Smith", "image2.jpg"));
        rowData.add(createRow(4, "Jane Smith", "image2.jpg"));
        rowData.add(createRow(5, "Jane Smith", "image2.jpg"));
        rowData.add(createRow(6, "Jane Smith", "image2.jpg"));
        rowData.add(createRow(7, "Jane Smith", "image2.jpg"));
        rowData.add(createRow(8, "Jane Smith", "image2.jpg"));
        rowData.add(createRow(9, "Jane Smith", "image2.jpg"));
        rowData.add(createRow(10), "Jane Smith", "image2.jpg"));
        rowData.add(createRow(11, "Jane Smith", "image2.jpg"));
        rowData.add(createRow(12, "Jane Smith", "image2.jpg"));
        rowData.add(createRow(13, "Jane Smith", "image2.jpg"));
        
        
        // Create the table with the custom renderer and editor
        table = new JTable(rowData, columnNames) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 2) {
                    return ImageIcon.class;
                }
                return Object.class;
            }
        };

        table.getColumn("Image").setCellRenderer(new ImageCellRenderer());
        table.getColumn("Image").setCellEditor(new ImageCellEditor());

        // Set up the layout of the frame
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);
    }

    // Method to create a row of data
    private Vector<Object> createRow(int id, String name, String imageFileName) {
        Vector<Object> row = new Vector<>();
        row.add(id);
        row.add(name);
        
        // Load the image as an ImageIcon
        ImageIcon imageIcon = new ImageIcon("C:\\Users\\baona\\OneDrive - Conestoga College\\School\\24-25\\WINTER 25\\Project 4\\Project 4\\Server\\Server\\src\\images\\"+imageFileName);
        row.add(imageIcon);
        
        return row;
    }

    // Custom TableCellRenderer for images
    private class ImageCellRenderer extends JLabel implements TableCellRenderer {
        public ImageCellRenderer() {
            setHorizontalAlignment(CENTER);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value,
                                                      boolean isSelected, boolean hasFocus, int row, int column) {
            if (value instanceof ImageIcon) {
                setIcon((ImageIcon) value);
            } else {
                setText(value.toString());
            }
            return this;
        }
    }

    // Custom TableCellEditor for images
    private class ImageCellEditor extends DefaultCellEditor {
        public ImageCellEditor() {
            super(new JTextField());
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value,
                                                     boolean isSelected, int row, int column) {
            if (value instanceof ImageIcon) {
                JLabel label = new JLabel();
                label.setIcon((ImageIcon) value);
                return label;
            }
            return super.getTableCellEditorComponent(table, value, isSelected, row, column);
        }
    }
}
