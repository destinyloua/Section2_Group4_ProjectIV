package back_end;

import java.nio.ByteBuffer;
import java.util.Vector;

import objects.*;

public class RequestHandler {	
	private static Packet packet;
	private static ByteBuffer read;
	private static byte[] data;
	
	public static Vector<Plant> GetPlantsList(){
		Vector<Plant> plantsList = new Vector<>();
		packet.SetHeader(3, 2);
		packet.SetContent(0);
		SocketHandler.SendData(packet);
		
		byte[] receivedData = SocketHandler.ReceiveData();
		read = ByteBuffer.wrap(receivedData);
		int response;
		response = read.getInt();
		if(response == 1) {
			System.out.println(read.getInt() + " plants will receive");
			for(int i=0; i< read.getInt(); i++) {
				read.get(data);
				Plant p = new Plant(data);
			}
		}
		else {
			return null;
		}
	}
	public static Boolean CreateAccount(Account a){
		packet.SetHeader(1, 1);
		packet.SetContent(a);
		SocketHandler.SendData(packet);
		
		byte[] receivedData = SocketHandler.ReceiveData();
		ByteBuffer read = ByteBuffer.wrap(receivedData);
		int response;
		response = read.getInt();
		if(response == 1) {
			return true;
		}
		else {
			return false;
		}
	}
	
	public static Boolean AuthenticateLogin(Account a) {
		packet.SetHeader(1, 2);
		packet.SetContent(a);
		SocketHandler.SendData(packet);

		byte[] receivedData = SocketHandler.ReceiveData();
		ByteBuffer read = ByteBuffer.wrap(receivedData);
		int header;
		header = read.getInt();
		if(header == 1) {
			int content = read.getInt();
			if(content == 1) {
				return true;
			}
			else {
				return false;
			}
		}
		else {
			return false;
		}
	}
	
	
}
