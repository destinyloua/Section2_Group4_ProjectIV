package objects;

import java.nio.*;

import back_end.Objects;
import back_end.SocketHandler;

public class Account implements Objects{
	private static int id;
	private static String fName;
	private static String lName;
	private static String email;
	private static int password;
	private static byte[] data;
	
	public Account(String fName, String lName, String email, String passwordIn) {
		fName = fName;
		lName = lName;
		email = email;
		password = passwordIn.hashCode();
	}
	
	public Account(String email, String passwordIn) {
		fName = "Null";
		lName = "Null";
		email = email;
		password = passwordIn.hashCode();
	}
	
	public Account(byte[] data) {
		ByteBuffer read = ByteBuffer.wrap(data);
		id = read.getInt();
		password = read.getInt();
		byte[] buffer = new byte[read.remaining()];
		read.get(buffer);
	    String combined = new String(buffer);
	    String[] splitArray = combined.split("#", 3);
	    fName = splitArray[0];
	    lName = splitArray[1];
	    email = splitArray[2];
	}
	
//	public Boolean Authenticate() {
//		SocketHandler.SendData(Serialize());
//		byte[] receivedData = SocketHandler.ReceiveData();
//		ByteBuffer read = ByteBuffer.wrap(receivedData);
//		int response;
//		response = read.getInt();
//		if(response == 1) {
//			return true;
//		}
//		else {
//			return false;
//		}
//	}
	
	public String GetFName() {
		return fName;
	}
	
	public String GetLName() {
		return lName;
	}
	
	public String GetEmail() {
		return email;
	}
	
	public int GetPassword() {
		return password;
	}
	
	public Integer id() {
		return id;
	}
	
	public byte[] Serialize() {
		byte[] idByte = ByteBuffer.allocate(4).putInt(id).array();
		byte[] passwordByte = ByteBuffer.allocate(4).putInt(password).array();
		String combined = fName + "#" + lName + "#" + email;
		this.data = new byte[8+combined.length()];
		System.arraycopy(idByte, 0, data, 0, 4);
		System.arraycopy(passwordByte, 0, data, 4, 4);
		System.arraycopy(combined.getBytes(), 0, data, 8, combined.length());
		return data;
	}
}
